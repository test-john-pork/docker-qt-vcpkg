name: Build and Push Docker Image
on:
    push:
        branches:
            - 'main'
            - 'test'
            - 'release/**'
        tags:
            - '*'
env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3
        
          - name: Checkout code
            uses: actions/checkout@v4
  
          - name: Login to DockerHub
            uses: docker/login-action@v3.4.0
            with:
              username: ${{ vars.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}
              logout: true

          - name: Extract metadata (tags, labels) for Docker
            id: meta
            uses: docker/metadata-action@v5.7.0
            with:
              flavor: |
                latest=auto
                
              images: |
                ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPOSITORY }}

              tags: |
                type=semver,pattern={{version}}
                type=semver,pattern={{major}}.{{minor}}
                type=ref,event=branch
                type=ref,event=pr

          - name: Runner Cache
            id: runner-cache
            uses: actions/cache@v4
            with:
              path: |
                root-cache
                var-cache-apt
                var-lib-apt

              key: runner-cache-${{ runner.os }}-${{ runner.arch }}-${{ github.run_id }}-${{ github.run_attempt }}
              restore-keys: |
                runner-cache-${{ runner.os }}-${{ runner.arch }}-${{ github.run_id }}-
  
          - name: Inject Runner Cache into Docker
            uses: reproducible-containers/buildkit-cache-dance@v3.1.2
            with:
              cache-map: |
                {
                  "root-cache": "/root/.cache",
                  "var-cache-apt": "/var/cache/apt",
                  "var-lib-apt": "/var/lib/apt"
                }
              skip-extraction: ${{ steps.runner-cache.outputs.cache-hit }}

          - name: Build and push Docker image
            uses: docker/build-push-action@v6.15.0
            with:
              cache-from: type=gha
              cache-to: type=gha,mode=max
              context: .
              file: Dockerfile
              push: ${{ github.event_name != 'pull_request' }}
              tags: ${{ steps.meta.outputs.tags }}
              labels: ${{ steps.meta.outputs.labels }}
